/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm0A = JSIL.DeclareAssembly("Fusee.Tutorial.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Tutorial");
JSIL.DeclareNamespace("Fusee.Tutorial.Core");
/* class Fusee.Tutorial.Core.Drive */ 

(function Drive$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm08.Fusee.Serialization.TransformComponent)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm07.Fusee.Math.Core.float3)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm08.Fusee.Serialization.SceneContainer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm15.System.Collections.Generic.List$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm08.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm15.System.Collections.Generic.List$b1.Of($asm08.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm08.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm08.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm08.Fusee.Serialization.SpecularChannelContainer)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0A.Fusee.Tutorial.Core.SimpleMeshes)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm15.System.Predicate$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm07.Fusee.Math.Core.float4)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm15.System.Collections.Generic.IEnumerable$b1.Of($asm08.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0A.Fusee.Tutorial.Core.Drive_$l$gc)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0C.Fusee.Xene.SceneFinderExtensions)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm12.System.Linq.Enumerable)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm0C.Fusee.Xene.ContainerExtensions)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm04.Fusee.Engine.Core.ScenePicker)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm04.Fusee.Engine.Core.SceneRenderer)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm15.System.Comparison$b1.Of($asm04.Fusee.Engine.Core.PickResult))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm15.System.Boolean)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm07.Fusee.Math.Core.float4x4)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm07.Fusee.Math.Core.float2)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm15.System.Collections.Generic.List$b1.Of($asm04.Fusee.Engine.Core.PickResult))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm04.Fusee.Engine.Core.PickResult)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm01.Fusee.Base.Core.Diagnostics)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm15.System.String)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm15.System.Single)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm03.Fusee.Engine.Common.KeyCodes)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm07.Fusee.Math.Core.M)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm15.System.Math)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm15.System.Double)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.TypeRef("Fusee.Math.Core.float3"), [
        $asm15.TypeRef("System.Single"), $asm15.TypeRef("System.Single"), 
        $asm15.TypeRef("System.Single")
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm15.TypeRef("System.Collections.Generic.List`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm15.TypeRef("System.Collections.Generic.List`1", [$asm08.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm08.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.TypeRef("Fusee.Math.Core.float4"), [
        $asm15.TypeRef("System.Single"), $asm15.TypeRef("System.Single"), 
        $asm15.TypeRef("System.Single"), $asm15.TypeRef("System.Single")
      ]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm15.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")])]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm0E.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Boolean"), [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.SceneRenderer"), [$asm08.TypeRef("Fusee.Serialization.SceneContainer")]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.MethodSignature($asm07.TypeRef("Fusee.Math.Core.float4x4"), [$asm07.TypeRef("Fusee.Math.Core.float4x4"), $asm07.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(new JSIL.MethodSignature($asm07.TypeRef("Fusee.Math.Core.float2"), [$asm07.TypeRef("Fusee.Math.Core.float2"), $asm07.TypeRef("Fusee.Math.Core.float2")]))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.TypeRef("Fusee.Math.Core.float2"), [$asm15.TypeRef("System.Single"), $asm15.TypeRef("System.Single")]))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Int32"), [$asm04.TypeRef("Fusee.Engine.Core.PickResult"), $asm04.TypeRef("Fusee.Engine.Core.PickResult")]))) ();
  };
  var $S17 = function () {
    return ($S17 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm15.TypeRef("System.Comparison`1", [$asm04.TypeRef("Fusee.Engine.Core.PickResult")])]))) ();
  };
  var $S18 = function () {
    return ($S18 = JSIL.Memoize(new JSIL.MethodSignature($asm07.TypeRef("Fusee.Math.Core.float3"), [$asm07.TypeRef("Fusee.Math.Core.float3"), $asm15.TypeRef("System.Single")]))) ();
  };


  function Drive__ctor () {
    this._camAngle = 1;
    this._d = 15;
    $T00().prototype._ctor.call(this);
  }; 

  function Drive_CreateScene () {
    var expr_07 = new ($T01())();
    expr_07.Rotation = $S00().Construct(0, 0, 0);
    expr_07.Scale = $S00().Construct(1, 1, 1);
    expr_07.Translation = $S00().Construct(0, 0, 0);
    this._baseTransform = expr_07;
    var expr_5F = new ($T03())();
    var expr_65 = $S01().Construct();
    var expr_6B = new ($T05())();
    var expr_71 = $S02().Construct();
    $S03().CallVirtual("Add", null, expr_71, this._baseTransform);
    var expr_84 = new ($T07())();
    var expr_8A = new ($T08())();
    expr_8A.Color = $S00().Construct(0.7, 0.7, 0.7);
    expr_84.Diffuse = expr_8A;
    var expr_AF = new ($T09())();
    expr_AF.Color = $S00().Construct(1, 1, 1);
    expr_AF.Shininess = 5;
    expr_84.Specular = expr_AF;
    $S03().CallVirtual("Add", null, expr_71, expr_84);
    $S03().CallVirtual("Add", null, expr_71, $T0A().CreateCuboid($S00().Construct(10, 10, 10)));
    expr_6B.Components = expr_71;
    $S04().CallVirtual("Add", null, expr_65, expr_6B);
    expr_5F.Children = expr_65;
    return expr_5F;
  }; 

  function Drive_Init () {
    var arg_61_1 = null, arg_AF_1 = null, arg_FD_1 = null, arg_14B_1 = null, arg_199_1 = null, arg_1E7_1 = null, arg_235_1 = null, arg_283_1 = null, arg_2D1_1 = null, arg_31F_1 = null;
    (this.RenderCanvas$RC$value.ClearColor = $S05().Construct(0.8, 0.9, 0.7, 1));
    this._scene = $T0E().Get$b1($T03())("Fahrzeug8.fus");
    var arg_61_0 = this._scene.Children;
    if ((arg_61_1 = $T10().$l$g9__27_0) === null) {
      arg_61_1 = $T10().$l$g9__27_0 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_0", $S06(), false, false));
    }
    var expr_66 = $S07().CallStatic($T11(), "FindNodes", null, arg_61_0, arg_61_1);
    if (expr_66 === null) {
      var arg_7F_1 = null;
    } else {
      var expr_72 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_66);
      arg_7F_1 = (
        (expr_72 !== null)
           ? $T13().GetTransform(expr_72, 0)
           : null)
      ;
    }
    this._oberesGewTransform = arg_7F_1;
    var arg_AF_0 = this._scene.Children;
    if ((arg_AF_1 = $T10().$l$g9__27_1) === null) {
      arg_AF_1 = $T10().$l$g9__27_1 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_1", $S09(), false, false));
    }
    var expr_B4 = $S07().CallStatic($T11(), "FindNodes", null, arg_AF_0, arg_AF_1);
    if (expr_B4 === null) {
      var arg_CD_1 = null;
    } else {
      var expr_C0 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_B4);
      arg_CD_1 = (
        (expr_C0 !== null)
           ? $T13().GetTransform(expr_C0, 0)
           : null)
      ;
    }
    this._RadR01Transform = arg_CD_1;
    var arg_FD_0 = this._scene.Children;
    if ((arg_FD_1 = $T10().$l$g9__27_2) === null) {
      arg_FD_1 = $T10().$l$g9__27_2 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_2", $S0A(), false, false));
    }
    var expr_102 = $S07().CallStatic($T11(), "FindNodes", null, arg_FD_0, arg_FD_1);
    if (expr_102 === null) {
      var arg_11B_1 = null;
    } else {
      var expr_10E = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_102);
      arg_11B_1 = (
        (expr_10E !== null)
           ? $T13().GetTransform(expr_10E, 0)
           : null)
      ;
    }
    this._RadR02Transform = arg_11B_1;
    var arg_14B_0 = this._scene.Children;
    if ((arg_14B_1 = $T10().$l$g9__27_3) === null) {
      arg_14B_1 = $T10().$l$g9__27_3 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_3", $S0B(), false, false));
    }
    var expr_150 = $S07().CallStatic($T11(), "FindNodes", null, arg_14B_0, arg_14B_1);
    if (expr_150 === null) {
      var arg_169_1 = null;
    } else {
      var expr_15C = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_150);
      arg_169_1 = (
        (expr_15C !== null)
           ? $T13().GetTransform(expr_15C, 0)
           : null)
      ;
    }
    this._RadR03Transform = arg_169_1;
    var arg_199_0 = this._scene.Children;
    if ((arg_199_1 = $T10().$l$g9__27_4) === null) {
      arg_199_1 = $T10().$l$g9__27_4 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_4", $S0C(), false, false));
    }
    var expr_19E = $S07().CallStatic($T11(), "FindNodes", null, arg_199_0, arg_199_1);
    if (expr_19E === null) {
      var arg_1B7_1 = null;
    } else {
      var expr_1AA = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_19E);
      arg_1B7_1 = (
        (expr_1AA !== null)
           ? $T13().GetTransform(expr_1AA, 0)
           : null)
      ;
    }
    this._RadR04Transform = arg_1B7_1;
    var arg_1E7_0 = this._scene.Children;
    if ((arg_1E7_1 = $T10().$l$g9__27_5) === null) {
      arg_1E7_1 = $T10().$l$g9__27_5 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_5", $S0D(), false, false));
    }
    var expr_1EC = $S07().CallStatic($T11(), "FindNodes", null, arg_1E7_0, arg_1E7_1);
    if (expr_1EC === null) {
      var arg_205_1 = null;
    } else {
      var expr_1F8 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_1EC);
      arg_205_1 = (
        (expr_1F8 !== null)
           ? $T13().GetTransform(expr_1F8, 0)
           : null)
      ;
    }
    this._RadR05Transform = arg_205_1;
    var arg_235_0 = this._scene.Children;
    if ((arg_235_1 = $T10().$l$g9__27_6) === null) {
      arg_235_1 = $T10().$l$g9__27_6 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_6", $S0E(), false, false));
    }
    var expr_23A = $S07().CallStatic($T11(), "FindNodes", null, arg_235_0, arg_235_1);
    if (expr_23A === null) {
      var arg_253_1 = null;
    } else {
      var expr_246 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_23A);
      arg_253_1 = (
        (expr_246 !== null)
           ? $T13().GetTransform(expr_246, 0)
           : null)
      ;
    }
    this._RadR06Transform = arg_253_1;
    var arg_283_0 = this._scene.Children;
    if ((arg_283_1 = $T10().$l$g9__27_7) === null) {
      arg_283_1 = $T10().$l$g9__27_7 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_7", $S0F(), false, false));
    }
    var expr_288 = $S07().CallStatic($T11(), "FindNodes", null, arg_283_0, arg_283_1);
    if (expr_288 === null) {
      var arg_2A1_1 = null;
    } else {
      var expr_294 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_288);
      arg_2A1_1 = (
        (expr_294 !== null)
           ? $T13().GetTransform(expr_294, 0)
           : null)
      ;
    }
    this._unterarmTransform = arg_2A1_1;
    var arg_2D1_0 = this._scene.Children;
    if ((arg_2D1_1 = $T10().$l$g9__27_8) === null) {
      arg_2D1_1 = $T10().$l$g9__27_8 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_8", $S10(), false, false));
    }
    var expr_2D6 = $S07().CallStatic($T11(), "FindNodes", null, arg_2D1_0, arg_2D1_1);
    if (expr_2D6 === null) {
      var arg_2EF_1 = null;
    } else {
      var expr_2E2 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_2D6);
      arg_2EF_1 = (
        (expr_2E2 !== null)
           ? $T13().GetTransform(expr_2E2, 0)
           : null)
      ;
    }
    this._verbagTransform = arg_2EF_1;
    var arg_31F_0 = this._scene.Children;
    if ((arg_31F_1 = $T10().$l$g9__27_9) === null) {
      arg_31F_1 = $T10().$l$g9__27_9 = $T0B().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lInit$gb__27_9", $S11(), false, false));
    }
    var expr_324 = $S07().CallStatic($T11(), "FindNodes", null, arg_31F_0, arg_31F_1);
    if (expr_324 === null) {
      var arg_33D_1 = null;
    } else {
      var expr_330 = $S08().CallStatic($T12(), "FirstOrDefault$b1", [$asm08.Fusee.Serialization.SceneNodeContainer], expr_324);
      arg_33D_1 = (
        (expr_330 !== null)
           ? $T13().GetTransform(expr_330, 0)
           : null)
      ;
    }
    this._carTransform = arg_33D_1;
    this._Pallete = +this._verbagTransform.Translation.y;
    var expr_35E = new ($T01())();
    expr_35E.Rotation = $S00().Construct(-0.55115664, 0, 0);
    expr_35E.Scale = $T02().One.MemberwiseClone();
    expr_35E.Translation = $S00().Construct(0, 0, -10);
    this._trailerTransform = expr_35E;
    var expr_3B2 = new ($T05())();
    var expr_3B8 = $S02().Construct();
    $S03().CallVirtual("Add", null, expr_3B8, this._trailerTransform);
    var expr_3CB = new ($T07())();
    var expr_3D1 = new ($T08())();
    expr_3D1.Color = $S00().Construct(0.7, 0.7, 0.7);
    expr_3CB.Diffuse = expr_3D1;
    var expr_3F6 = new ($T09())();
    expr_3F6.Color = $S00().Construct(1, 1, 1);
    expr_3F6.Shininess = 5;
    expr_3CB.Specular = expr_3F6;
    $S03().CallVirtual("Add", null, expr_3B8, expr_3CB);
    $S03().CallVirtual("Add", null, expr_3B8, $T0A().CreateCuboid($S00().Construct(2, 2, 2)));
    expr_3B2.Components = expr_3B8;
    $S04().CallVirtual("Add", null, this._scene.Children, expr_3B2);
    var expr_457 = new ($T01())();
    expr_457.Rotation = $S00().Construct(0, 0, 0);
    expr_457.Scale = $T02().One.MemberwiseClone();
    expr_457.Translation = $S00().Construct(100, 100, 0);
    this._baseTransform = expr_457;
    var expr_4AB = new ($T05())();
    var expr_4B1 = $S02().Construct();
    $S03().CallVirtual("Add", null, expr_4B1, this._baseTransform);
    var expr_4C4 = new ($T07())();
    var expr_4CA = new ($T08())();
    expr_4CA.Color = $S00().Construct(1, 0.7, 0.7);
    expr_4C4.Diffuse = expr_4CA;
    var expr_4EF = new ($T09())();
    expr_4EF.Color = $S00().Construct(1, 1, 1);
    expr_4EF.Shininess = 5;
    expr_4C4.Specular = expr_4EF;
    $S03().CallVirtual("Add", null, expr_4B1, expr_4C4);
    $S03().CallVirtual("Add", null, expr_4B1, $T0A().CreateCuboid($S00().Construct(2, 2, 2)));
    expr_4AB.Components = expr_4B1;
    $S04().CallVirtual("Add", null, this._scene.Children, expr_4AB);
    this._scenePicker = new ($T14())(this._scene);
    this._sceneRenderer = $S12().Construct(this._scene);
  }; 

  function Drive_RenderAFrame () {
    var arg_1B8_1 = null;
    (this.RenderCanvas$RC$value).Clear($T17().$Flags("Color", "Depth"));
    var rightButton = $T1A().get_Mouse().get_RightButton();
    if (rightButton) {
      this._camAngle = +this._camAngle + (+((((+$T1A().get_Mouse().get_Velocity().x * 1E-05) * +$T1B().get_DeltaTime()) / 20)) * 10000);
    }
    (this.RenderCanvas$RC$value.View = $S13().CallStatic($T1C(), "op_Multiply", null, 
        $S13().CallStatic($T1C(), "op_Multiply", null, 
          $T1C().CreateRotationX(-0.430355161).MemberwiseClone(), 
          $T1C().CreateRotationY(3.14159274 - +this._trailerTransform.Rotation.y).MemberwiseClone()
        ).MemberwiseClone(), 
        $T1C().CreateTranslation(-this._trailerTransform.Translation.x, -6, -this._trailerTransform.Translation.z).MemberwiseClone()
      ).MemberwiseClone());
    var leftButton = $T1A().get_Mouse().get_LeftButton();
    if (leftButton) {
      var pickPos = $T1D().op_Addition($S14().CallStatic($T1D(), "op_Multiply", null, 
          $T1A().get_Mouse().get_Position().MemberwiseClone(), 
          $S15().Construct(+((2 / +(this.get_Width()))), +((-2 / +(this.get_Height()))))
        ).MemberwiseClone(), $S15().Construct(-1, 1));
      this._scenePicker.View = (this.RenderCanvas$RC$value).get_View().MemberwiseClone();
      this._scenePicker.Projection = (this.RenderCanvas$RC$value).get_Projection().MemberwiseClone();
      var list = $T12().ToList$b1($T1F())((this._scenePicker).Pick(pickPos.MemberwiseClone()));
      var flag = (list.get_Count() | 0) > 0;
      if (flag) {
        $T20().Log(list.get_Item(0).Node.Name);
        var pickResult = null;
        var flag2 = (list.get_Count() | 0) > 0;
        if (flag2) {
          var arg_1B8_0 = list;
          if ((arg_1B8_1 = $T10().$l$g9__28_0) === null) {
            arg_1B8_1 = $T10().$l$g9__28_0 = $T16().New($T10().$l$g9, null, new JSIL.MethodPointerInfo($asm0A.Fusee.Tutorial.Core.Drive_$l$gc, "$lRenderAFrame$gb__28_0", $S16(), false, false));
          }
          $S17().Call($T1E().prototype, "Sort", null, arg_1B8_0, arg_1B8_1);
          pickResult = list.get_Item(0);
        }
        var arg_1E9_0 = (
          (pickResult !== null)
             ? pickResult.Node
             : null)
        ;
        var expr_1DD = this._currentPick;
        var flag3 = arg_1E9_0 !== (
          (expr_1DD !== null)
             ? expr_1DD.Node
             : null)
        ;
        if (flag3) {
          if (this._currentPick !== null) {
            $T13().GetMaterial(this._currentPick.Node, 0).Diffuse.Color = this._oldColor.MemberwiseClone();
          }
          var flag5 = pickResult !== null;
          if (flag5) {
            var material = $T13().GetMaterial(pickResult.Node, 0);
            this._oldColor = material.Diffuse.Color.MemberwiseClone();
            material.Diffuse.Color = $S00().Construct(1, 0.4, 0.4);
            this._Pallete = +$T13().GetTransform(pickResult.Node, 0).Translation.y - 2.5;
          }
          this._currentPick = pickResult;
        }
      }
    }
    if (this._currentPick !== null) {
      if (this._currentPick.Node.Name == "Rad_R_01") {
        var num = +this._RadR01Transform.Rotation.x;
        num += (+$T1A().get_Keyboard().get_ADAxis() * 2) * +$T1B().get_DeltaTime();
        this._RadR01Transform.Rotation = $S00().Construct(num, 0, 0);
      } else {
        if (this._currentPick.Node.Name == "Rad_L_01") {
          var num2 = +this._RadR02Transform.Rotation.x;
          num2 += (+$T1A().get_Keyboard().get_ADAxis() * 2) * +$T1B().get_DeltaTime();
          this._RadR02Transform.Rotation = $S00().Construct(num2, 0, 0);
        } else {
          if (this._currentPick.Node.Name == "Rad_02_R") {
            var num3 = +this._RadR03Transform.Rotation.x;
            num3 += (+$T1A().get_Keyboard().get_ADAxis() * 2) * +$T1B().get_DeltaTime();
            this._RadR03Transform.Rotation = $S00().Construct(num3, 0, 0);
          } else {
            if (this._currentPick.Node.Name == "Rad_02_L") {
              var num4 = +this._RadR04Transform.Rotation.x;
              num4 += (+$T1A().get_Keyboard().get_ADAxis() * 2) * +$T1B().get_DeltaTime();
              this._RadR04Transform.Rotation = $S00().Construct(num4, 0, 0);
            } else {
              if (this._currentPick.Node.Name == "Rad_03_L") {
                var num5 = +this._RadR05Transform.Rotation.x;
                num5 += (+$T1A().get_Keyboard().get_ADAxis() * 2) * +$T1B().get_DeltaTime();
                this._RadR05Transform.Rotation = $S00().Construct(num5, 0, 0);
              } else {
                if (this._currentPick.Node.Name == "Rad_03_R") {
                  var num6 = +this._RadR06Transform.Rotation.x;
                  num6 += (+$T1A().get_Keyboard().get_ADAxis() * 2) * +$T1B().get_DeltaTime();
                  this._RadR06Transform.Rotation = $S00().Construct(num6, 0, 0);
                } else {
                  if (this._currentPick.Node.Name == "Pallete") {
                  }
                }
              }
            }
          }
        }
      }
      if (this._currentPick.Node.Name == "pfeiler_gewinde_arm_nicht_drehbar") {
        var num7 = +this._oberesGewTransform.Rotation.y;
        num7 += +$T1A().get_Keyboard().get_LeftRightAxis() * 0.005;
        this._oberesGewTransform.Rotation = $S00().Construct(0, num7, 0);
      } else {
        if (this._currentPick.Node.Name == "unterer_arm") {
          var num8 = +this._unterarmTransform.Rotation.x;
          var key = $T1A().get_Keyboard().GetKey($T24().Up);
          if (key) {
            var flag16 = num8 <= 0.35;
            if (flag16) {
              num8 += +$T1B().get_DeltaTime() * 0.1;
              this._unterarmTransform.Rotation = $S00().Construct(num8, 0, 0);
            }
          }
          var key2 = $T1A().get_Keyboard().GetKey($T24().Down);
          if (key2) {
            var flag17 = num8 >= 0;
            if (flag17) {
              num8 -= +$T1B().get_DeltaTime() * 0.1;
              this._unterarmTransform.Rotation = $S00().Construct(num8, 0, 0);
            }
          }
        } else {
          if (this._currentPick.Node.Name == "verbindung_arm_greifer") {
            var num9 = +this._verbagTransform.Translation.y;
            var key3 = $T1A().get_Keyboard().GetKey($T24().Up);
            if (key3) {
              var flag19 = num9 <= -0.5;
              if (flag19) {
                num9 += +$T1B().get_DeltaTime() * 2;
                this._verbagTransform.Translation = $S00().Construct(0, num9, 0);
              }
            }
            var key4 = $T1A().get_Keyboard().GetKey($T24().Down);
            if (key4) {
              var flag20 = num9 >= -10;
              if (flag20) {
                num9 -= +$T1B().get_DeltaTime() * 2;
                this._verbagTransform.Translation = $S00().Construct(0, num9, 0);
              }
            }
          }
        }
      }
    }
    var num10 = +this._RadR03Transform.Rotation.x;
    num10 += (+$T1A().get_Keyboard().get_WSAxis() * 0.15) * (+((+$T1B().get_DeltaTime() / 16)) * 1000);
    this._RadR03Transform.Rotation = $S00().Construct(num10, 0, 0);
    var num11 = +this._RadR04Transform.Rotation.x;
    num11 += (+$T1A().get_Keyboard().get_WSAxis() * 0.15) * (+((+$T1B().get_DeltaTime() / 16)) * 1000);
    this._RadR04Transform.Rotation = $S00().Construct(num11, 0, 0);
    var num12 = +this._RadR05Transform.Rotation.x;
    num12 += (+$T1A().get_Keyboard().get_WSAxis() * 0.15) * (+((+$T1B().get_DeltaTime() / 16)) * 1000);
    this._RadR05Transform.Rotation = $S00().Construct(num12, 0, 0);
    var num13 = +this._RadR06Transform.Rotation.x;
    num13 += (+$T1A().get_Keyboard().get_WSAxis() * 0.15) * (+((+$T1B().get_DeltaTime() / 16)) * 1000);
    this._RadR06Transform.Rotation = $S00().Construct(num13, 0, 0);
    var num14 = +this._RadR01Transform.Rotation.x;
    var y = +this._RadR01Transform.Rotation.y;
    num14 += (+$T1A().get_Keyboard().get_WSAxis() * 0.15) * (+((+$T1B().get_DeltaTime() / 16)) * 1000);
    y = -$T1A().get_Keyboard().get_ADAxis() * -0.35;
    this._RadR01Transform.Rotation = $S00().Construct(num14, y, 0);
    var num15 = +this._RadR02Transform.Rotation.x;
    var y2 = +this._RadR02Transform.Rotation.y;
    num15 += (+$T1A().get_Keyboard().get_WSAxis() * 0.15) * (+((+$T1B().get_DeltaTime() / 16)) * 1000);
    y2 = -$T1A().get_Keyboard().get_ADAxis() * -0.35;
    this._RadR02Transform.Rotation = $S00().Construct(num15, y2, 0);
    var x = +this._unterarmTransform.Rotation.x;
    var num16 = +this._verbagTransform.Translation.y;
    var flag21 = +this._Pallete < num16;
    if (flag21) {
      num16 -= +$T1B().get_DeltaTime();
      var flag22 = +this._Pallete > num16;
      if (flag22) {
        num16 = +this._Pallete;
      }
    }
    var flag23 = +this._Pallete > num16;
    if (flag23) {
      num16 += +$T1B().get_DeltaTime();
      var flag24 = +this._Pallete < num16;
      if (flag24) {
        num16 = +this._Pallete;
      }
    }
    this._verbagTransform.Translation = $S00().Construct(this._verbagTransform.Translation.x, num16, this._verbagTransform.Translation.z);
    var translation = this._carTransform.Translation.MemberwiseClone();
    var translation2 = this._trailerTransform.Translation.MemberwiseClone();
    var num17 = -$T1A().get_Keyboard().get_WSAxis() * +$T1B().get_DeltaTime();
    var num18 = +$T1A().get_Keyboard().get_ADAxis() * +$T1B().get_DeltaTime();
    var num19 = +this._carTransform.Rotation.y + (((num18 * +$T1A().get_Keyboard().get_WSAxis()) * +$T1B().get_DeltaTime()) * 30);
    this._carTransform.Rotation = $S00().Construct(0, num19, 0);
    var float = $T02().op_Addition(this._carTransform.Translation.MemberwiseClone(), $S00().Construct(((num17 * +$T25().Sin(num19)) * 10), 0, ((num17 * +$T25().Cos(num19)) * 10)));
    this._carTransform.Translation = float.MemberwiseClone();
    var translation3 = $T02().op_Addition(float.MemberwiseClone(), $S18().CallStatic($T02(), "op_Multiply", null, $T02().Normalize($T02().op_Subtraction(translation2.MemberwiseClone(), float).MemberwiseClone()).MemberwiseClone(), this._d));
    this._trailerTransform.Translation = translation3.MemberwiseClone();
    this._trailerTransform.Rotation = $S00().Construct(0, Math.fround(Math.atan2($T02().Normalize($T02().op_Subtraction(translation2.MemberwiseClone(), float).MemberwiseClone()).x, $T02().Normalize($T02().op_Subtraction(translation2.MemberwiseClone(), float).MemberwiseClone()).z)), 0);
    (this._sceneRenderer).Render(this.RenderCanvas$RC$value);
    this.Present();
  }; 

  function Drive_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspect = +((+(this.get_Width()) / +(this.get_Height())));
    var projection = $T1C().CreatePerspectiveFieldOfView(0.7853982, aspect, 1, 20000);
    (this.RenderCanvas$RC$value.Projection = projection.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Tutorial.Core.Drive", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Drive__ctor
    );

    $.Method({Static:false, Public:false}, "CreateScene", 
      JSIL.MethodSignature.Return($asm08.TypeRef("Fusee.Serialization.SceneContainer")), 
      Drive_CreateScene
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      Drive_Init
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      Drive_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      Drive_Resize
    );

    $.Field({Static:false, Public:false}, "_scene", $asm08.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_scene1", $asm08.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneRenderer", $asm04.TypeRef("Fusee.Engine.Core.SceneRenderer"));

    $.Field({Static:false, Public:false}, "_sceneRenderer1", $asm04.TypeRef("Fusee.Engine.Core.SceneRenderer"));

    $.Field({Static:false, Public:false}, "_camAngle", $.Single);

    $.Field({Static:false, Public:false}, "_baseTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_unterarmTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_verbagTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_oberesGewTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_RadR01Transform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_RadR02Transform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_RadR03Transform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_RadR04Transform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_RadR05Transform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_RadR06Transform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_planeTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_carTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_trailerTransform", $asm08.TypeRef("Fusee.Serialization.TransformComponent"));

    $.Field({Static:false, Public:false}, "_scenePicker", $asm04.TypeRef("Fusee.Engine.Core.ScenePicker"));

    $.Field({Static:false, Public:false}, "_currentPick", $asm04.TypeRef("Fusee.Engine.Core.PickResult"));

    $.Field({Static:false, Public:false}, "_oldColor", $asm07.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "_Pallete", $.Single);

    $.Field({Static:false, Public:false}, "pAlt", $asm07.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "pAneu", $asm07.TypeRef("Fusee.Math.Core.float3"));

    $.Field({Static:false, Public:false}, "_d", $.Single);

    $.Field({Static:false, Public:false}, "pBalt", $asm07.TypeRef("Fusee.Math.Core.float3"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Tutorial.Core.Drive+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm08.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm15.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.Fusee.Engine.Core.PickResult)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm15.System.Math)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm15.TypeRef("System.Int32"), [$asm15.TypeRef("System.Single")]))) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInit$gb__27_0 (node) {
    return node.Name == "pfeiler_gewinde_arm_nicht_drehbar";
  }; 

  function $l$gc_$lInit$gb__27_1 (node) {
    return node.Name == "Rad_R_01";
  }; 

  function $l$gc_$lInit$gb__27_2 (node) {
    return node.Name == "Rad_L_01";
  }; 

  function $l$gc_$lInit$gb__27_3 (node) {
    return node.Name == "Rad_02_R";
  }; 

  function $l$gc_$lInit$gb__27_4 (node) {
    return node.Name == "Rad_02_L";
  }; 

  function $l$gc_$lInit$gb__27_5 (node) {
    return node.Name == "Rad_03_L";
  }; 

  function $l$gc_$lInit$gb__27_6 (node) {
    return node.Name == "Rad_03_R";
  }; 

  function $l$gc_$lInit$gb__27_7 (node) {
    return node.Name == "unterer_arm";
  }; 

  function $l$gc_$lInit$gb__27_8 (node) {
    return node.Name == "verbindung_arm_greifer";
  }; 

  function $l$gc_$lInit$gb__27_9 (node) {
    return node.Name == "cassis";
  }; 

  function $l$gc_$lRenderAFrame$gb__28_0 (a, b) {
    return $S00().CallStatic($T03(), "Sign", null, +a.get_ClipPos().z - +b.get_ClipPos().z);
  }; 

  JSIL.MakeType({
      BaseType: $asm15.TypeRef("System.Object"), 
      Name: "Fusee.Tutorial.Core.Drive+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_0", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_0
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_1", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_1
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_2", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_2
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_3", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_3
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_4", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_4
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_5", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_5
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_6", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_6
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_7", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_7
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_8", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_8
    );

    $.Method({Static:false, Public:false}, "$lInit$gb__27_9", 
      new JSIL.MethodSignature($.Boolean, [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc_$lInit$gb__27_9
    );

    $.Method({Static:false, Public:false}, "$lRenderAFrame$gb__28_0", 
      new JSIL.MethodSignature($.Int32, [$asm04.TypeRef("Fusee.Engine.Core.PickResult"), $asm04.TypeRef("Fusee.Engine.Core.PickResult")]), 
      $l$gc_$lRenderAFrame$gb__28_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__27_0", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_1", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_2", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_3", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_4", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_5", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_6", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_7", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_8", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__27_9", $asm15.TypeRef("System.Predicate`1", [$asm08.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:true , Public:true }, "$l$g9__28_0", $asm15.TypeRef("System.Comparison`1", [$asm04.TypeRef("Fusee.Engine.Core.PickResult")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm15.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Tutorial.Core.SimpleMeshes */ 

(function SimpleMeshes$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm15.System.Single)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm15.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm15.System.NotImplementedException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm07.Fusee.Math.Core.float3)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm08.Fusee.Serialization.MeshComponent)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm15.System.UInt16)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.Fusee.Math.Core.float2)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm07.Fusee.Math.Core.AABBf)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm07.Fusee.Math.Core.float3))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm15.System.UInt16))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm07.Fusee.Math.Core.M)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm15.TypeRef("System.NotImplementedException"), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.TypeRef("Fusee.Math.Core.float3"), [
        $asm15.TypeRef("System.Single"), $asm15.TypeRef("System.Single"), 
        $asm15.TypeRef("System.Single")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.TypeRef("Fusee.Math.Core.float2"), [$asm15.TypeRef("System.Single"), $asm15.TypeRef("System.Single")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm07.TypeRef("Fusee.Math.Core.float3"), [$asm15.TypeRef("System.Single"), $asm07.TypeRef("Fusee.Math.Core.float3")]))) ();
  };


  function SimpleMeshes_CreateCone (radius, height, segments) {
    return $thisType.CreateConeFrustum(radius, 0, height, segments);
  }; 

  function SimpleMeshes_CreateConeFrustum (radiuslower, radiusupper, height, segments) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateCuboid (size) {
    var meshComponent = new ($T04())();
    meshComponent.Vertices = JSIL.Array.New($T03(), [$S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((-0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (-0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (-0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z)), $S01().Construct((0.5 * +size.x), (0.5 * +size.y), (0.5 * +size.z))]);
    meshComponent.Normals = JSIL.Array.New($T03(), [$S01().Construct(-1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, -1), $S01().Construct(-1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, 1), $S01().Construct(-1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, -1), $S01().Construct(-1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, 1), $S01().Construct(1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, -1), $S01().Construct(1, 0, 0), $S01().Construct(0, -1, 0), $S01().Construct(0, 0, 1), $S01().Construct(1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, -1), $S01().Construct(1, 0, 0), $S01().Construct(0, 1, 0), $S01().Construct(0, 0, 1)]);
    meshComponent.Triangles = JSIL.Array.New($T05(), [0, 6, 3, 3, 6, 9, 2, 14, 20, 2, 20, 8, 12, 15, 18, 15, 21, 18, 5, 11, 17, 17, 11, 23, 7, 22, 10, 7, 19, 22, 1, 4, 16, 1, 16, 13]);
    meshComponent.UVs = JSIL.Array.New($T06(), [$S02().Construct(1, 0), $S02().Construct(1, 0), $S02().Construct(0, 0), $S02().Construct(0, 0), $S02().Construct(1, 1), $S02().Construct(1, 0), $S02().Construct(1, 1), $S02().Construct(0, 0), $S02().Construct(0, 1), $S02().Construct(0, 1), $S02().Construct(0, 1), $S02().Construct(1, 1), $S02().Construct(0, 0), $S02().Construct(0, 0), $S02().Construct(1, 0), $S02().Construct(1, 0), $S02().Construct(0, 1), $S02().Construct(0, 0), $S02().Construct(0, 1), $S02().Construct(1, 0), $S02().Construct(1, 1), $S02().Construct(1, 1), $S02().Construct(1, 1), $S02().Construct(0, 1)]);
    meshComponent.BoundingBox = new ($T07())($S03().CallStatic($T03(), "op_Multiply", null, -0.5, size.MemberwiseClone()).MemberwiseClone(), $S03().CallStatic($T03(), "op_Multiply", null, 0.5, size.MemberwiseClone()).MemberwiseClone());
    return meshComponent;
  }; 

  function SimpleMeshes_CreateCylinder (radius, height, segments) {
    var array = JSIL.Array.New($T03(), (((segments | 0) + 1) | 0));
    var array2 = JSIL.Array.New($T03(), (((segments | 0) + 1) | 0));
    var array3 = JSIL.Array.New($T05(), Math.imul(segments, 3));
    var num = +((6.28318548 / +segments));
    array[segments] = $T03().Zero.MemberwiseClone();
    array2[segments] = $T03().UnitY.MemberwiseClone();
    array[0] = $S01().Construct(radius, 0, 0);
    array2[0] = $T03().UnitY.MemberwiseClone();

    for (var i = 1; i < (segments | 0); i = ((i + 1) | 0)) {
      array[i] = $S01().Construct((+radius * +$T0A().Cos(+i * num)), 0, (+radius * +$T0A().Sin(+i * num)));
      array2[i] = $T03().UnitY.MemberwiseClone();
      array3[((Math.imul(3, i) - 1) | 0)] = (segments & 0xFFFF);
      array3[((Math.imul(3, i) - 2) | 0)] = (i & 0xFFFF);
      array3[((Math.imul(3, i) - 3) | 0)] = (((i - 1) | 0) & 0xFFFF);
    }
    array3[((Math.imul(3, segments) - 1) | 0)] = (segments & 0xFFFF);
    array3[((Math.imul(3, segments) - 2) | 0)] = 0;
    array3[((Math.imul(3, segments) - 3) | 0)] = ((((segments | 0) - 1) | 0) & 0xFFFF);
    var expr_F2 = new ($T04())();
    expr_F2.Vertices = array;
    expr_F2.Normals = array2;
    expr_F2.Triangles = array3;
    return expr_F2;
  }; 

  function SimpleMeshes_CreatePyramid (baselen, height) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateTetrahedron (edgelen) {
    throw $S00().Construct();
  }; 

  function SimpleMeshes_CreateTorus (mainradius, segradius, segments, slices) {
    throw $S00().Construct();
  }; 

  JSIL.MakeStaticClass("Fusee.Tutorial.Core.SimpleMeshes", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "CreateCone", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      SimpleMeshes_CreateCone
    );

    $.Method({Static:true , Public:true }, "CreateConeFrustum", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [
          $.Single, $.Single, 
          $.Single, $.Int32
        ]), 
      SimpleMeshes_CreateConeFrustum
    );

    $.Method({Static:true , Public:true }, "CreateCuboid", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [$asm07.TypeRef("Fusee.Math.Core.float3")]), 
      SimpleMeshes_CreateCuboid
    );

    $.Method({Static:true , Public:true }, "CreateCylinder", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [
          $.Single, $.Single, 
          $.Int32
        ]), 
      SimpleMeshes_CreateCylinder
    );

    $.Method({Static:true , Public:true }, "CreatePyramid", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [$.Single, $.Single]), 
      SimpleMeshes_CreatePyramid
    );

    $.Method({Static:true , Public:true }, "CreateTetrahedron", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [$.Single]), 
      SimpleMeshes_CreateTetrahedron
    );

    $.Method({Static:true , Public:true }, "CreateTorus", 
      new JSIL.MethodSignature($asm08.TypeRef("Fusee.Serialization.MeshComponent"), [
          $.Single, $.Single, 
          $.Int32, $.Int32
        ]), 
      SimpleMeshes_CreateTorus
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

